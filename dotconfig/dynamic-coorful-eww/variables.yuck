;; Display size
(defvar DP_WIDTH "1920")
(defvar DP_HEIGHT "1200")

;; Profile
(defvar PF_FACE "images/gab.png")
(defpoll PF_NAME :interval "1h" "whoami")

;; Workspace
(defpoll WORKSPACES_YUCK :interval "0.5s"
  "scripts/workspaces.sh --yuck")

;; Activewindow name
(defpoll ACTIVEWINDOW_NAME :interval "1s"
  "scripts/workspaces.sh --activewindow_name")

; (defvar WORKSPACES_JSON `[[1, "active"], [2, "inactive"], [3, "occupied"]]`)

;; Date
(defpoll TIME_HOUR  :interval "30s" "date +'%H'")
(defpoll TIME_MIN   :interval "30s" "date +'%M'")
(defpoll DATE_MER   :interval "1m" "date +'%p'")
(defpoll DATE_DOW   :interval "1m" "date +'%A'")
(defpoll DATE_MON   :interval "1m" "date +'%b'")
(defpoll DATE_DAY   :interval "1m" "date +'%d'")
(defpoll UPTIME     :interval "1m" "uptime --pretty")

;; Weather
(defpoll WEATHER_CON    :interval "1h" "scripts/weather.sh --conditions")
(defpoll WEATHER_TEMP   :interval "1h" "scripts/weather.sh --temperature")
(defpoll WEATHER_LOCALE :interval "1h" "scripts/weather.sh --locale_id")

;; Brightness
(defpoll BRIGHTNESS :interval "2s"
  "scripts/display.sh --get_brightness")

;; Volume
(defpoll VOLUME_LEVEL :interval "2s"
  "scripts/volume.sh --level")

;; Battery
(defpoll BATTERY_ICONS :interval "1m"
  "scripts/battery.sh --icons")

(defpoll BATTERY_LEVEL :interval "1m"
  "scripts/battery.sh --level")

;; Music status from mpris
(defpoll MPRIS_TITLE :interval "2s"
  "scripts/mpris.sh --title")

(defpoll MPRIS_ARTIST :interval "2s"
  "scripts/mpris.sh --artist")

(defpoll MPRIS_COVER :interval "2s"
  "scripts/mpris.sh --cover")

;; LAN
(defpoll LAN_CON_STATUS :interval "2s"
  "scripts/network.sh --con_status")

(defpoll LAN_SSID :interval "2s"
  "scripts/network.sh --ssid")

(defpoll LAN_INET4 :interval "2s"
  "scripts/network.sh --inet4")

;; Bluetooth
(defpoll BLUETOOTH_CON_STATUS :interval "2s"
  "scripts/bluetooth.sh --con_status")

(defpoll BLUETOOTH_DEVICENAME :interval "2s"
  "scripts/bluetooth.sh --device")

;; Input
(defvar INPUT_VALUE "")

;; Boolean
(defvar SHOW_CENTER_BAR false)

(defvar SHOW_CENTER_BAR_PAGE_SWITCHER false)
(defvar SHOW_CENTER_BAR_PAGE0 true)
(defvar SHOW_CENTER_BAR_PAGE1 false)
(defvar SHOW_CENTER_BAR_PAGE2 false)

(defvar SHOW_TOP_LEFT false)
(defvar SHOW_CALENDAR false)

(defvar HOVER_BLUETOOTH false)
(defvar SHOW_BLUETOOTH false)

(defvar HOVER_LAN false)
(defvar SHOW_LAN false)

;; Json

;; Json array of tha LAN AP's SSID
(defvar SSID_ARRAY `["there are no AP..."]`)

;; Json array of the known Bluetooth devices name
(defvar BT_NAME_ARRAY `["there are no BT dev..."]`)

;; Inline CSS
(defvar base_top_center_margin 0)

;; I still thinking more smart way... if i change filename to variable it does not wrok...
(defpoll bg      :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep bg:     | awk '{print $2}' | sed -e 's/;//g'")
(defpoll bg-alt  :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep bg-alt: | awk '{print $2}' | sed -e 's/;//g'")
(defpoll fg      :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep fg:     | awk '{print $2}' | sed -e 's/;//g'")
(defpoll fg-alt  :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep fg-alt: | awk '{print $2}' | sed -e 's/;//g'")

(defpoll color1  :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep color1: | awk '{print $2}' | sed -e 's/;//g'")
(defpoll color2  :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep color2: | awk '{print $2}' | sed -e 's/;//g'")
(defpoll color3  :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep color3: | awk '{print $2}' | sed -e 's/;//g'")
(defpoll color4  :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep color4: | awk '{print $2}' | sed -e 's/;//g'")
(defpoll color5  :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep color5: | awk '{print $2}' | sed -e 's/;//g'")
(defpoll color6  :interval "1h"  "cat scss/color-schemes/_marshmallow.scss | grep color6: | awk '{print $2}' | sed -e 's/;//g'")









