;; Widgets ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Background
(defwidget widget_bg []
  (box )
)

;; Start
(defwidget widget_start []
  (eventbox :class "start" 
            :onclick "$HOME/.config/eww/popup/launch.sh --toggle_gnome_widget" 
            :style "background-image:     url('${FACE}');
                    background-repeat:    no-repeat;
                    background-size:      cover;
                    opacity:              0.75; 
                   "
  )
)

;; Workspace
(defwidget widget_workspace []
  (box :halign "center" :valign "center"
    (literal :content WORKSPACES_YUCK)
  ) 
)

;; Activewindow
(defwidget widget_activewindow []
  (box :halign "center" :valign "center" :space-evenly false :spacing 10
    (label :class "sys_icon" :text "󰖲")
    (label :class "sys_label_thin" :limit-width 15 :text "${ACTIVEWINDOW}")
  )
)

;; Music
(defwidget widget_music []
   (eventbox :onclick "$HOME/.config/eww/popup/launch.sh --toggle_music"
     
    (overlay
      (revealer :reveal "${MUSIC_PLAYING}" :transition "crossfade"
        (box :class "music_animation" 
             :css " .music_animation {
                      background-image:     url('${MUSIC_ART}');
                      background-repeat:    no-repeat;
                      background-size:      cover;
                      background-position:  center center;

                      opacity:              0.5;
                      transition:           1s ease-in;
                    }
                  "
        )
      )
      
      (box :class "sys_label_thin" :orientation "v" :valign "center"
        (label :halign "center" :limit-width 25 :text "${MUSIC_TITLE}")
        (label :halign "center" :limit-width 25 :text "${MUSIC_ARTIST}") 
      ) 
    )
  )
)

;; Systeminfo
(defwidget widget_sysinfo []
  (box :halign "center" :valign "center" :space-evenly false :spacing 30 
    (box :orientation "v"
      (box :halign "center" :valign "center" :space-evenly false :spacing 15
        (label :class "sys_icon" :text {BLUETOOTH_CON_STATUS == "connected" ? "󰂯" : "󰂲"})
        (label :class "sys_label_thin" :limit-width 20 :text "${BLUETOOTH_DEVICE}")
      )
      (box :halign "center" :valign "center" :space-evenly false :spacing 15
        (label :class "sys_icon" :text {LAN_CON_STATUS == "connected" ? "󰤨" : "󰤭"})
        (label :class "sys_label_thin" :limit-width 20 :text {LAN_CON_STATUS == "connected" ? "${LAN_SSID}" : "offline"})
      )
    ) 
    
    (box :halign "center" :valign "center" :space-evenly false :spacing 15
      (label :class "sys_icon" :text "")
      (label :class "sys_label" :text "${VOLUME_LEVEL}%")
    )
    (box :halign "center" :valign "center" :space-evenly false :spacing 15
      (label :class "sys_icon" :text "")
      (label :class "sys_label" :text "${BRIGHT_LEVEL}%")
    )
  )
)

;; Battery
(defwidget widget_battery []
  (box :halign "center" :valign "center" :space-evenly false :spacing 20
    (label :class "sys_icon" :text "${BATTERY_ICONS}")
  )
)

;; Clock
(defwidget widget_clock []
  (box :halign "center" :valign "center" :space-evenly false :spacing 20
    (label :class "sys_icon" :text "")
    (label :class "sys_label" :text "${TIME}")
  )
)

;; Menu
(defwidget widget_menu []
  (eventbox :class "menu" 
            :onclick "$($HOME/.config/eww/popup/launch.sh --toggle_powermenu; 
                        $HOME/.config/eww/popup/launch.sh --toggle_ssmenu)" 
    (label :text "󰥹") 
  )
)








