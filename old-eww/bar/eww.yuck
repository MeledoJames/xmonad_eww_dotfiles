;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Workspaces
;; (defvar YUCK "")

(defpoll YUCK :interval "0.1s"
  "scripts/getworkspaces.sh")

;; Current brightness
(defpoll BRIGHTNESS :interval "1s"
  "scripts/getbrightness.sh")

;; Current volume
(defpoll VOLUME :interval "1s"
  "scripts/getvolume.sh")

;; Current time
(defpoll TIME :interval "10s"
  "date '+%H:%M'")

;; Wi-fi status
(defpoll WIFI :interval "5s"
  "scripts/getwifi.sh")

;; Current battery
(defpoll BATTERY :interval "30s"
  "scripts/getbattery.sh")

(defpoll BATTERYSTATUS :interval "1s"
  "acpi -b | awk '{print $3}' | rev | cut -c 2- | rev")

;; Music status
(defpoll MUSIC :interval "1s"
  "$HOME/.config/eww/popup/scripts/popupmusic.sh --title")

;; Music cover
(defpoll ART :interval "2s"
  "$HOME/.config/eww/popup/scripts/popupmusic.sh --art")

;; Windows ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwindow bar
  :monitor 0
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :x 0
                      :y 0
                      :width "100%"
                      :height "60px"
                      :anchor "top center")
  (container))

;; Widgets ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Main container
(defwidget container []
  (centerbox :orientation "h"

    (left)
    (center)
    (right)))

;; Child container ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Left module
(defwidget left []
  (box :class           "left-widget" 
       :orientation     "h"
       :space-evenly    false
       :halign          "start"
       :spacing         5

    ;; Start menu
    (box :class         "start-menu" 
         :orientation   "h"
         :space-evenly  false
         :halign        "center"

     (button :class "arch-icon" :onclick "notify-send 'Btw I Use Arch.'" " "))
    (workspaces)
    (music)))

;; Center module
(defwidget center []
  (box :class           "center-widget" 
       :orientation     "h"
       :space-evenly    false
       :halign          "center"

    (clock)))

;; Right module
(defwidget right []
  (box :class         "right-widget" 
       :orientation   "h"
       :space-evenly  false
       :halign        "end"
       :spacing       5

    (systeminfo)

    ;; Power menu
    (box :class         "power-menu" 
         :orientation   "h"
         :space-evenly  false
         :halign        "center"

      (button :class "haskell-icon" :onclick "~/Scripts/usefull-tools/launch-eww-widgets.sh &" " "))))

;; Workspaces ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget workspaces []
  (literal :content YUCK))

;; Time ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget clock []
  (label :class "time" :halign "center" :text TIME))

;; Music ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget music []
  (box :class         "music" 
       :orientation   "h"
       :space-evenly  false
       :halign        "center"
       :spacing       5

    ;(button :class    "spotify-icon" 
    ;        :onclick  "$HOME/Scripts/usefull-tools/eww-popup.sh music" " ")

    (box :class "spotify-icon"

      (box :class   "music-art"
           :halign  "center"
           :valign  "center"
           :style   "background-image: url('${ART}');"))


    (box :class         "music-status"
         :orientation   "h"
         :space-evenly  false

      (label :limit-width 16 :text MUSIC))))

;; System information ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defwidget systeminfo []
  (box :class         "system-info" 
       :orientation   "h"
       :space-evenly  false
       :hexpand       "false"
       :halign        "end"
       :spacing       8

    ;; Brightness modules
    (box :class         "brightness-info"
         :orientation   "h"
         :space-evenly  true
         :halign        "center"
         :spacing       5

      (label :class "brightness-icon" :halign "start" :text "󰃞 ")
      (label :class "brightness" :halign "end" :text "${BRIGHTNESS}%"))

    ;; Volume module
    (box :class         "volume-info"
         :orientation   "h"
         :space-evenly  false
         :halign        "center"
         :spacing       5

      (label :class "volume-icon" :halign "start" :text "󰕾 ")
      (label :class "volume" :halign "end" :text VOLUME))

    ;; Wifi module
    (box :class         "wifi-info"
         :orientation   "h"
         :space-evenly  false
         :halign        "center"
         :spacing       5

      (label :class "wifi-icon" :halign "start" :text "󰖩 ")
      (box :class "wifi" :halign "end" {WIFI != "0" ? "connected" : "disconnected"}))

    ;; Battery modules
    (box :class         "battery-info"
         :orientation   "h"
         :sapce-evenly  false
         :halign        "center"
         :spacing       5

      (label :class "battery-icon" :halign "start" :text "󰁹")
      (label :class "battery" :halign "center" :text "${BATTERY}%"))))





